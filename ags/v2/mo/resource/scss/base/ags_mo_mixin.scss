/* function */
@function rem($value) {
  $rem-size: ($value / $font-root-size);
  @return #{$rem-size}rem;
}
@function em($value1, $value2) {
  $em-size: ($value1 / $value2);
  @return #{$em-size}em;
}
@function grid-mg($value: 1) {
  $mg-size: rem(($value * 5));
  @return $mg-size;
}

/* mixin */
@mixin font($family: ko, $size: $font-root-size, $color: $mono1, $weight: 400, $spacing: -0.03){
  @if $family == en {
    font-family: $font-en-family
  } @else if $family == ko {
    font-family: $font-common-family
  }
  font-size: rem($size);
  font-weight: $weight;
  color: $color;
  letter-spacing: #{$spacing}em;
}
@mixin border-radius($radius: $border-common-radius){
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
}
@mixin background($file, $type, $width, $height) {
  $img-path: '../img/';
  background-image: url($img-path + $file + '.' + $type);
  background-repeat: no-repeat;
  background-size: $width $height;

  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 144dpi) {
    & {
      background-image: url($img-path + $file + '@2x.' + $type);
    }
  }
  @media (-webkit-min-device-pixel-ratio: 3), (min-device-pixel-ratio: 3) {
    & {
      background-image: url($img-path + $file + '@3x.' + $type);
    }
  }
}
@mixin flex($params: null) {
  display: flex;
  $justify-content: null;
  $align-items: null;
  @each $value in $params {
    @if $value == "wrap" {
      flex-wrap: wrap;
    } @else if $value == "column" {
      flex-direction: column;
    } @else if index(space-between space-around, $value) {
      $justify-content: $value;
    } @else if index(baseline stretch, $value) {
      $align-items: $value;
    } @else if index(flex-start center flex-end, $value) {
      @if $justify-content {
        $align-items: $value;
      } @else {
        $justify-content: $value;
        @if not $align-items {
          $align-items: $value;
        }
      }
    }
  }
  justify-content: $justify-content;
  align-items: $align-items;
}
@mixin no-flex($params: null){
  html.no-flexbox & {
    @each $value in $params {
      @if $value == "clearfix" {
        @include clearfix;
      } @else if index(float-left, $value) {
        float: left;
      } @else if index(float-right, $value) {
        float: right;
      }
    }
  }//for ie9
}
@mixin placeholder(){
  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    @content;
  };
  &::-moz-placeholder { /* Firefox 19+ */
    @content;
  };
  &:-ms-input-placeholder { /* IE 10+ */
    @content;
  };
  &:-moz-placeholder { /* Firefox 18- */
    @content;
  };
}
@mixin sr-only {
  position: absolute; width: 0; height: 0; margin: 0; padding: 0; overflow: hidden; clip: rect(0, 0, 0, 0); border: 0
}
@mixin clearfix {
  &:after { content: ''; display: table; clear: both; }
}
@mixin transform($value) {
  -webkit-transform: $value;
  -ms-transform: $value;
  transform: $value;
}
@mixin valign-middle($value: before) {
  &:#{$value} { content: ""; display: inline-block; width: 0; height: 100%; vertical-align: middle; }
}
@mixin align-center(){
  position: absolute; left: 50%; top: 50%;
  @include transform(translate(-50%, -50%));
}
@mixin valign-center(){
  position: absolute; left: 0; top: 50%;
  @include transform(translate(0, -50%));
}
@mixin text-uppercase {
  text-transform: uppercase;
}
@mixin text-ellipsis($value: inline-block) {
  overflow: hidden;
  display: $value;
  width: 100%;
  white-space: nowrap; text-overflow: ellipsis; vertical-align: middle
}
@mixin divide-line($direction: left, $el: before, $color: $mono7, $size: 12, $mg: 10){
  position: relative;
  padding-left: ($mg * 2 * 1px);
  &:#{$el} {
    content: "";
    position: absolute; left: #{$mg}px; top: 50%;
    @include transform(translate(0, -50%));
    display: inline-block;
    width: 1px; height: #{$size}px;
    background-color: $color;
  }
};
@mixin price-unit($type: 'usd'){
  @content;
  @if $type == 'usd' {
    .digits:before { content: "$"; }
  } @else if $type =='krw' {
    .digits:before { content: "₩"; }
  }
}
@mixin price($type: normal, $color1: $mono1, $color2: $mono3){
  @if $type == normal {
    dl, dt, dd { display: inline-block; }
    dt { @include sr-only }
    .price-usd + dd {
      @include font($size: 14, $color: $color1, $weight: 400);
      @include price-unit($type: 'usd');
    }
    .price-krw + dd {
      @include font($size: 14, $color: $color2, $weight: 400);
      @include price-unit($type: 'krw');
      &:before { content: "(" }
      &:after { content: ")" }
    }
  } @else if $type == total {
    @include font($size: 16, $color: $color1, $weight: 800);
    dl, dt, dd { display: inline-block; }
    dt { @include sr-only }
    .price-usd + dd {
      @include price-unit($type: 'usd');
    }
    .price-krw + dd {
      @include font($size: 14, $color: $color2, $weight: 400);
      @include price-unit($type: 'krw');
      &:before { content: "(" }
      &:after { content: ")" }
    }
  } @else if $type == inline {
    display: inline;
    .price-usd, .price-krw { @include sr-only }
    .price-usd + dd,
    .price-krw + dd {
      @include font($family: ko, $size: 14, $color: $color1, $weight: 400, $spacing: -0.03);
      display: inline;
    }
    .price-usd + dd { color: $color1; font-weight: 600 }
    .price-usd + dd .digits:before { content: "$" }
    .price-krw + dd {
      font-size: rem(12); color: $color2;
      &:before { content: "(" }
      &:after { content: ")" }
    }
    .price-krw + dd .digits:before { content: "₩"; }
  }
}
@mixin bullet($type: circle, $size: 3px, $color: #D8D8D8, $el: before, $top: 5px){
  position: relative;
  padding-left: ($size * 3);
  &:#{$el} {
    content: "";
    position: absolute; left: 0;
    display: inline-block;
    @if $type == circle {
      top: $top;
      width: $size; height: $size;
      background-color: $color;
      border-radius: 50%;
    } @else if $type == dash {
      width: $size; height: 1px;
      background-color: $color;
    }
  }
}
@mixin table($style: type1, $font-size: 13, $mg-size: normal){
  a, button, input, textarea, select { margin-bottom: 0 !important; }
  width: 100%;
  @if $style == type1 {
    $font-size-thead: $font-size;
    $font-size-tbody: $font-size;
    caption { overflow: hidden; height: 0; text-indent: -999em; font-size: 0; }
    th, td {  }
    thead th {
      @include font($size: $font-size-thead, $weight: 600);
      padding: rem(11) 0; height: em(43, $font-size-thead);
      line-height: em(14, $font-size-thead); vertical-align: middle;
      border-bottom: 1px solid $mono8
    }
    tbody th, tbody td,
    tfoot th, tfoot td {
      @include font($size: $font-size-tbody);
      padding: rem(10) 0; vertical-align: middle;
      height: em(56, $font-size-tbody);
      line-height: em(16, $font-size-tbody);
      border-bottom: 1px solid $mono8
    }
    tbody th { font-weight: 600; }
    tfoot th, tfoot td {
      @include font($size: $font-size-tbody, $weight: 600);
      background-color: $mono10
    }
    @if $mg-size == normal {
      thead th { padding-left: rem(30); padding-right: rem(30); }
      tbody th,
      tbody td,
      tfoot th,
      tfoot td { padding-left: rem(30); padding-right: rem(30); }
    } @else if $mg-size == small {
      thead th { padding-left: rem($grid * 2); padding-right: rem($grid * 2); }
      tbody td { padding-left: rem($grid * 2); padding-right: rem($grid * 2); }
      thead th:first-child { padding-left: rem($grid * 4); }
      tbody td:first-child { padding-left: rem($grid * 4); }
      thead th:last-child { padding-right: rem($grid * 4); }
      tbody td:last-child { padding-right: rem($grid * 4); }
      tfoot th:first-child { padding-left: rem($grid * 4); }
      tfoot td:last-child { padding-right: rem($grid * 4); }
    } @else if $mg-size == xsmall {
      thead th,
      tbody td { padding: rem(10); }
    } @else if $mg-size == none {
      thead th,
      tbody td,
      thead th:first-child,
      tbody td:first-child,
      thead th:last-child,
      tbody td:last-child,
      tfoot th:first-child,
      tfoot td:last-child { padding-left: 0; padding-right: 0; }
    }
  }
  @if $style == type2 {
    $font-size: 11;
    @include font($size: $font-size, $color: $mono1, $weight: 400, $spacing: 0);
    width: 100%;
    th, td { vertical-align: middle; line-height: em(12, $font-size); }
    thead th,
    tbody th[scope='colgroup'],
    tbody th:first-child:last-child {
      padding: em(10, $font-size); min-height: em(32, $font-size);
      font-weight: 600; text-align: center; color: $mono10;
      background-color: $mono1;
      & + th { border-left: 1px solid $mono10 }
    }
    tbody th,
    tbody td {
      padding: em(16, $font-size) em(10, $font-size);
      background-color: $mono10;
      border-bottom: 1px solid #ddd;
      & + * { border-left: 1px solid #ddd; }
    }
  }
}
@mixin tab($params: null){
  @each $value in $params {
    overflow: auto; width: 100%;
    [role='tablist'] {
      display: table;
      overflow: visible; min-width: 100%;
      [role='tab'] { display: table-cell; }
    }
    @if $value == style1 {
      [role='tab'] {
        $font-size: 14;
        @include text-ellipsis(null);
        @include font($size: $font-size, $color: $mono4, $weight: 800, $spacing: -0.03);
        padding: em(12, $font-size) rem($grid * 2); max-width: 80vw;
        text-align: center;
        border-bottom: 1px solid $mono8;
        &.active { border-color: $mono1; color: $mono1 }
      }
    } @else if $value == style2 {
      [role='tab'] {
        $font-size: 16;
        @include text-ellipsis(null);
        @include font($size: $font-size, $color: $mono4, $weight: 500, $spacing: -0.03);
        padding: em(32, $font-size) rem($grid * 2);
        flex: 1 auto;  max-width: 80vw;
        text-align: center;
        border-bottom: 1px solid $mono8;
        &.active { color: $mono1; }
      }
    }
  }
}
@mixin foldable-content($active-height: 5000px) {
  @include clearfix;
  transition: max-height 0.5s;
  overflow: hidden;
  max-height: 0;
  &.active { max-height: $active-height; }
}
@mixin keyframe($animation_name) {
  @-webkit-keyframes #{$animation_name} {
    @content;
  }

  @-moz-keyframes #{$animation_name} {
    @content;
  }

  @-o-keyframes #{$animation_name} {
    @content;
  }

  @keyframes #{$animation_name} {
    @content;
  }
}
@mixin animation($delay, $duration, $animation, $direction: forward, $fillmode: fowards) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-fill-mode: $fillmode;
  -webkit-animation-direction: $direction;

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-fill-mode: $fillmode;
  -moz-animation-direction: $direction;

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-fill-mode: $fillmode;
  animation-direction: $direction;
}
.anm_r-to-l {
  @include keyframe($animation_name: anm_r-to-l){
    0% {
      @include transform(translate(100%, 0));
    }
    100% {
      @include transform(translate(0, 0));
    }
  }
  @include animation($delay: 0.2s, $duration: 0.5s, $animation: anm_r-to-l, $direction: forward, $fillmode: fowards);
  transition: all 0.5s;
  transition-delay: 0.5s;
}
.anm_l-to-r {
  @include animation($delay: 0.2s, $duration: 0.5s, $animation: anm_l-to-r, $direction: forward, $fillmode: fowards);
}
@mixin tagging-route {
  @include font($size: 9, $color: $mono1, $weight: 800, $spacing: -0.03);
  display: inline-block;
  width: rem(35); height: rem(16);
  line-height: rem(14);
  text-align: center; white-space: nowrap;
  border: 1px solid $mono1;
}

@mixin flight-info {
  [class$='-header']{
    @include flex(flex-start stretch flex-start nowrap);
  }
  .title { margin-bottom: rem(12); font-weight: 800; }
  dl.flight-num, dl.flight-info {
    margin: 0 0 rem(12) rem(4);
  }
  dl.flight-num, dl.flight-info {
    dt { @include sr-only }
    dd { vertical-align: middle; }
    & + .table-wrap { border-top: 1px solid $mono1; }
  }
  dl.flight-num {
    &, & > * { display: inline-block; }
    dd { @include tagging-route; width: auto; padding: 0 rem(4); }
  }
  dl.flight-info {
    @include flex(flex-start flex-start center nowrap);
    flex: 1 auto;
    padding-right: rem(16);
    dd:nth-of-type(1) ~ dd { margin-left: rem(4); }
    .airline + dd { height: rem(16); }
    .airline + dd [class^='ico_'] { overflow: hidden; display: block; height: 100%; background-position: 0 50%; text-indent: -999em; }
    .airline + dd .ico_7c { @include background($file: 'common/symbol_flight-way_7c_dom', $type: png, $width: rem(62), $height: rem(12)); width: rem(62); }
    .airline + dd .ico_tw { @include background($file: 'common/symbol_flight-way_tw_dom', $type: png, $width: rem(38), $height: rem(16)); width: rem(38);}
    .flight-num + dd { @include tagging-route;width: auto; padding: 0 rem(4); }
    .view-seat + dd {
      margin-left: auto !important;
      a {
        @include font($size: 13, $color: #66B1FF, $weight: 400);
      }
    }
  }
}

@mixin ico($type: 'alert') {
  overflow: hidden;
  position: relative;
  @if $type == alert {
    $size: 48;
    display: block;
    margin: 0 auto; width: rem($size); height: rem($size);
    background-color: $mono7; border-radius: 50%;
    text-indent: -999em;
    &:before {
      @include background($file: 'popup/ico_exclamation--w', $type: png, $width: rem(4), $height: rem(28));
      @include align-center;
      content: "";
      display: inline-block;
      width: rem(4); height: rem(28);
    }
  }
}

/* alert common style */
@mixin alert-style {
  .ico-wrap {
    $size: 48;
    padding-top: rem(50); height: rem(50 + $size);
    [class*='ico_alert'] {
      overflow: hidden;
      position: relative;
      display: inline-block;
      width: rem($size); height: rem($size);
      background-color: $mono9; border-radius: 50%;
      text-indent: -999em;
      &:before {
        @include background($file: 'popup/ico_exclamation--w', $type: png, $width: rem(4), $height: rem(28));
        @include align-center;
        content: "";
        display: inline-block;
        width: rem(4); height: rem(28);
      }
    }
    [class*='--primary'] {
      background-color: $bg-primary;
    }
    & + .alert-title + .alert-text:last-of-type { padding-bottom: rem($grid * 2) }
  }
  .alert-title {
    $font-size: 16;
    @include font($size: $font-size, $color: $mono1, $weight: 600, $spacing: -0.03);
    padding-top: rem(30);
    line-height: em(22, $font-size);
    &:last-child { padding-bottom: rem($grid * 2) }
  }
  .alert-text {
    $font-size: 13;
    @include font($size: $font-size, $color: $mono1, $weight: 400, $spacing: -0.03);
    padding-top: rem($grid * 2);
    line-height: em(18, $font-size);
  }
  .alert-text:first-child { padding-top: rem($grid * 3) }
  dl.alert-text {
    $font-size: 11;
    @include clearfix;
    @include font($size: $font-size, $color: $mono1, $weight: 400, $spacing: -0.03);
    margin-left: rem($grid * 2); margin-right: rem($grid * 2); padding-top: 0;
    border-top: 1px solid $mono1;
    line-height: em(16, $font-size);
    & > * { float: left; border-bottom: 1px solid $mono8; min-height: rem(42); }
    & > dt {
      padding: rem($grid * 2) rem($grid * 2); width: 70px;
      text-align: center; font-weight: 800;
    }
    & > dd {
      padding: rem($grid * 2) 0; width: calc(100% - 70px);
      text-align: left;
    }
  }
  ul.alert-text {
    $font-size: 11;
    @include font($size: $font-size, $color: $mono1, $weight: 400, $spacing: -0.03);
    margin: rem($grid * 4) rem($grid * 3) 0 rem($grid * 3); padding: 0 !important;
    border-top: 1px solid $mono1;
    line-height: em(16, $font-size); text-align: left;
    & > * { position: relative; padding: rem($grid * 2) rem($grid * 2) rem($grid * 2) rem(70); border-bottom: 1px solid $mono8; min-height: rem(42); }
    .alert-text-title {
      @include valign-center; left: 0;
      padding: rem($grid * 2) rem($grid * 2); width: 70px;
      text-align: center; font-weight: 800 !important;
    }
    &:last-child { padding-bottom: rem($grid * 4) !important }
  }
}
@mixin content-wrap {
  @include clearfix; margin: 0 auto; padding: 0 rem($grid * 2); width: calc(100% + 32px);
}
@mixin box-shadow($value){
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  box-shadow: $value;
}

/* 규정 및 약관 아코디언 */
@mixin btn-more--minified {
  @include font($size: 11, $color: $mono1, $weight: 600, $spacing: -0.03);
  padding: rem(5) rem(11) rem(5) rem(5); text-decoration: none; color: inherit;
  .ico {
    -webkit-transform: rotate(-45deg) translate(4px, 2px);
    -ms-transform: rotate(-45deg) translate(4px, 2px);
    -o-transform: rotate(-45deg) translate(4px, 2px);
    transform: rotate(-45deg) translate(4px, 2px);
    display: inline-block;
    width: rem(4); height: rem(4); border: solid $mono1; border-width: 0 0 1px 1px;
  }
}
@mixin btn_more--minified($activeEl: null) {
  @include font($size: 11, $color: $mono1, $weight: 600);
  padding: rem(5) rem(11) rem(5) rem(5); text-decoration: none; color: inherit;
  .ico {
    @include transform(rotate(-45deg) translate(5px, 1.5px));
    transform-origin: center;
    display: inline-block;
    width: rem(4); height: rem(4); border: solid $border-primary; border-width: 0 0 1px 1px;
  }
  @if $activeEl != null {
    @at-root #{$activeEl}.active .btn_more .ico {
      @include transform(rotate(135deg) translate(-4px, -3px) !important);
    }
  }
}
@mixin agreement-wrap {
  input[type='checkbox'] { @include form($size: 3, $role: normal, $type: checkbox); }
  input[type='radio'] { @include form($size: 3, $role: normal, $type: radio); }
  padding: rem(80) 0 0 rem($grid * 2);
  h5,
  .agreement-title { @include font($size: 14, $color: $mono1, $weight: 800, $spacing: -0.03); margin-bottom: rem(12); }
  .agreement-list {
    border-top: 1px solid $mono1;
    & > li {
      @include valign-middle();
      overflow: hidden;
      position: relative; height: rem(50);
      border-bottom: 1px solid $mono8;
      label {
        @include text-ellipsis();
        @include font($size: 13, $color: $mono1, $weight: 600, $spacing: -0.03);
        float: left; padding: rem(17) rem($grid * 2) 0 0; width: calc(100% - 90px); height: rem(50);
      }
      &.active { overflow: auto; height: auto; }
    }
    .btn_more { position: absolute; right: rem($grid * 2); top: rem(15); margin-right: rem(-5) }
  }
  .table-wrap { padding-bottom: 0; }
  .notification-wrap {
    float: left;
    padding: rem($grid * 4) rem($grid * 2) rem($grid * 4); width: 100%;
    background-color: #F8F8F8;
    .notification-list {
      padding: rem($grid) 0 rem(20);
      & > li {
        $font-size: 11;
        @include font($size: $font-size, $color: $mono1, $weight: 400, $spacing: -0.03);
        position: relative;
        padding-left: em(6, $font-size);
        line-height: em(16, $font-size); letter-spacing: -0.03em;
        &:before {
          content: "";
          position: absolute; left: 0; top: em(6, $font-size);
          display: inline-block;
          width: 2px; height: 2px;
          border-radius: 50%; background-color: #5B5B5B;
        }
        & + li { margin-top: em(4, $font-size); }
      }
      &:last-child { padding-bottom: 0; }
      &.no-blt {
        li {
          padding-left: 0;
          &:before { display: none; }
        }
      }
    }
    td .notification-list {
      padding: 0;
    }
    td .notification-text + .notification-list,
    td .notification-list + .notification-text,
    td .notification-list + .notification-list,
    td .notification-text + .notification-text { padding-top: rem($grid * 2) }
    td .notification-list:not(.no-blt) {
      .notification-text, li { color: #5B5B5B; }
    }
    td .notification-list.no-blt {
      .notification-text, li { color: $mono1; }
    }
  }
  table {
    @include table($style: type2, $mg-size: xsmall);
    p { line-height: rem(16); }
    p + ul { padding-top: rem(12); }
    p + ul + p { padding-top: rem(12); }
    tbody tr:last-of-type th,
    tbody tr:last-of-type td { border-bottom: 0; }
  }
  .agreement-all-list {
    position: relative;
    margin: -1px 0 rem(50); height: rem(50);
    border-top: 1px solid $mono1; border-bottom: 1px solid $mono8;
    label {
      @include font($size: 13, $color: $mono1, $weight: 600 !important, $spacing: -0.03);
      position: absolute; left: 0; top: 0; right: 0; bottom: 0;
      padding: rem(17) 0 0;
      font-size: rem(13) !important;
    }
  }
  dl {
    $font-size: 11;
    @include font($size: $font-size, $color: $mono1, $weight: 400, $spacing: 0);
    dt {
      padding: em(10, $font-size); min-height: em(32, $font-size);
      font-weight: 600; text-align: center; color: $mono10;
      background-color: $mono1;
      & + th { border-left: 1px solid $mono10 }
    }
    dd {
      padding: em(16, $font-size) em(10, $font-size);
      background-color: $mono10;
      border-bottom: 1px solid #ddd;
    }
  }
  .btn_more {
    @include btn-more--minified
  }
}
@mixin bundle-flag($ico-class: '.ico'){
  #{$ico-class} {
    @include font($size: 9, $color: $mono4, $weight: 800, $spacing: -0.03);
    display: inline-block;
    padding: rem(2) rem($grid / 2); min-width: rem(47);
    border: 1px solid; text-align: center;
  }
}
@mixin bundle-flag-type($airline: tw, $type: 1, $ico-class: '.ico'){
  @if $airline == tw and $type == 0 {
    #{$ico-class} { color: transparent; border-color: transparent }
  } @else if $airline == tw and $type == 1 {
    #{$ico-class} { color: $bg_bundle-type1; border-color: $bg_bundle-type1 }
  } @else if $airline == tw and $type == 2 {
    #{$ico-class} { color: $bg_bundle-type2; border-color: $bg_bundle-type2 }
  } @else if $airline == tw and $type == 3 {
    #{$ico-class} { color: $bg_bundle-type3; border-color: $bg_bundle-type3 }
  }
}
@mixin ico_help {
  overflow: hidden;
  display: inline-block;
  margin-left: rem(3); width: rem(14); height: rem(14);
  @include background($file: 'common/ico_help', $type: png, $width: rem(14), $height: rem(14));
  background-position: center center;
  text-indent: -999em; vertical-align: top;
}
